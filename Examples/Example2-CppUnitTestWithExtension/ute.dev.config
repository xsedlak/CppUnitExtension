################################################################################
# Configuration file for ute.sh
# (default values)
################################################################################

################################################################################
# General properties for CppUnit
################################################################################
# The additional command line options for UteRunner
# Default value: empty
#UTE_CPPUNIT_CLO=""

#Examples:
#UteRunner redirect print-out from the standard output into file_name.txt
#UTE_CPPUNIT_CLO="-r stdout.txt"

################################################################################
# General properties of tested binary
################################################################################

# Tested binary, should be the same as a GM target
# Default value: derived from name of directory and suffix _test
UTE_BINARY_FILE="example2-cppunitwithextension"

# The default command line options for script ute.sh, these parameters are added to paramaters which are written on the command line
#UTE_BINARY_FILE_CLO=""

# Tested version, choose from release and debug
# Default value: debug
#UTE_BINARY_FILE_VERSION="debug"

# The complete path to ims_do VOB, where all binaries can be found
#UTE_BINARY_FILE_PATH="$HOME/cppunit/exec"

# The list of numbers defining the return values to be ignored when tested target binary ended with some ERROR
#UTE_BINARY_FILE_IGNORE_RESULTS=""

################################################################################
# Testcase structure settings
################################################################################
# Starting directory for all searches
#UTE_TC_DIR="./"

# "multi" structure can specify dirs where output/trace files are stored
UTE_TC_OUT_DIR="./tc/output_files"
UTE_TC_TRC_DIR="./tc/output_files"
UTE_TC_EXP_DIR="./tc/results"

# The files with list of successful/failed test cases   # command option for store test cases
#UTE_TC_SUCCESSFUL="$(date '+%y%m%d-%H%M%S').OK_TCs.txt"         # -ls
#UTE_TC_FAILED="$(date '+%y%m%d-%H%M%S').ERROR_TCs.txt"          # -lf

# The own substitutions
#UTE_TC_SUB="ute_sub.pm"

################################################################################
# Working directories
################################################################################

#UTE_PURIFY_DIR="tool_logs/purify"
#UTE_TCOV_DIR="tool_logs/tcov"
#UTE_TMP_DIR="$HOME/tmp"

################################################################################
# General properties for tools
################################################################################
#UTE_DEBUGGER="dbx"
#UTE_DIFF="cleartool diff -g"

#Examples:
#UTE_DIFF="vim -d"
#UTE_DIFF="cleartool diff"
#UTE_DIFF="diff"

################################################################################
# User's command line variables, which define set of test cases for testing
################################################################################

UTE_STC_GROUP="./tc/*"
#Examples:
#UTE_STC_GROUP="$UTE_TC_DIR/*"
#UTE_STC_NO_CMD="$UTE_TC_DIR/[^c]*"
#UTE_STC_GROUPS="$UTE_STC_GROUP $UTE_STC_NO_CMD"
#Then you can use:
#These variables can be used when is run UTE:
#../../ute/ute.sh -s UTE_STC_GROUP   
#../../ute/ute.sh -s UTE_STC_GROUPS
#../../ute/ute.sh -s UTE_STC_ALL  #where UTE_STC_ALL is set of test cases defined by variables UTE_STC_*

################################################################################
# UTE testing functions 
################################################################################

function ute_testing_before()
{
	make
}

function ute_testing_after()
{
  :
}

################################################################################
# UTE test case functions 
################################################################################

function ute_tc_before()
{
    :
}

function ute_tc_after()
{
    :
}

################################################################################
# UTE usage function
################################################################################
function ute_binary_usage()
{
cat << !!
	This is print-out of ute_binary_usage function in the ./ute.dev.config UTE developers configuration file.
	The binary runs CppUnit extension: UTE Runner(an interface between UTE and CppUnit), Reader (the syntax reader), Writer (the output writer) with arguments: 
	$UTE_BINARY_FILE_PATH/$UTE_BINARY_FILE -i <*.in> -o <*.out> 
	<*.in>	INPUT FILE: the file contains the syntax of READER describes what test functions with arguments should be called
	<*.out>	OUTPUT FILE: the file contains the result of reading and returns values of test function
!!
}

function ute_tc_usage
{
cat << !!
	This is print-out of ute_tc_usage function in the ./ute.dev.config UTE developers configuration file.
	The developer can create the Set of Test Cases (STC) and test it.
	Example: 
		The variable UTE_STC_GROUP is written in the UTE developer's configuration file ./ute.dev.config
		UTE_STC_GROUP="$UTE_STC_GROUP"
		and then the developer can runs TCs this way:
		$ ../../ute/ute.sh -s UTE_STC_GROUP
!!
}
