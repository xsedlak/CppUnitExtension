The project should work on linux.


Notes on intentions (see wiki for more):
  CppUnit/
    - copy of cppunit sources (todo: note version)
    - only relevant files from cppunit-1.12.1 are copied there
  CppUnitExtension/
    - sources of developed extension
  Example/
    - how to use cppunit without and with the extension


Start with project:
1) create your own ssh keys
2) create an account on github.com and provide your account with your public ssh key
   (let me know about your account name, I'll add you as a collaborator)
3) run 'git clone git@github.com:xsedlak/CppUnitExtension.git; cd CppUnitExtension', you are in dev. directory
4) run 'cmake . &&  make', you have project compiled and can
    4.1) 'cd Examples/Example1-ClassicCppUnitTest/' and run Test Cases for CppUnit 'example1-classiccppunit'
    4.2) 'cd Examples/Example2-CppUnitTestWithExtension/' and run the Test Case './example2-cppunitwithextension -i tc/test.in -o tc/test.out'
    4.3) 'cd Examples/Example2-CppUnitTestWithExtension/' and run Test Cases '../../ute/ute.sh -i' #will be implemented


Your work should comprise:
1) do not make project not compilable
2) comment anything that you've changed on project's wiki or anything that makes sense
3) as editor you can use 'vim'


Basic git commands:
1) git pull                  # to get new version from 'master' branch (no other branch will be used)
2) git push                  # to push your changes to 'master' branch
3) git add xyz.cpp           # to add new or changed xyz.cpp to the project
4) git rm xyz.cpp            # to remove xyz.cpp from the project
5) git commit -m "A comment" # commit your changes locally (use 'git push' then)
6) git -f -x                 # clean working directory from files not in repository


TODO:
  - let CppUnit/include/cppunit/config-auto.h be auto-created (now it's
    generated on kubuntu 9.10, might not match your env)
  - cmake version 2.8.0 is needed

# vim: ts=4 sw=4 et tw=0
